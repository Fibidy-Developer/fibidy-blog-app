// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 📁 User

model User {
  id               Int       @id @default(autoincrement())
  name             String
  email            String    @unique
  bio              String?
  avatar           String?
  password         String?

  resetToken       String?   @unique
  resetTokenExpiry DateTime?
  
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  posts            Post[]
  comments         Comment[]
  likes            Like[]
}

// 📁 Post

model Post {
  id        Int       @id @default(autoincrement())
  slug      String?   @unique
  title     String
  content   String
  thumbnail String?
  published Boolean
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]

  tags  Tag[]  @relation("PostTags")
  likes Like[]
}

// 📁 comments

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 📁 Tag

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] @relation("PostTags")
}

// 📁 Like

model Like {
  id     Int  @id @default(autoincrement())
  userId Int
  postId Int
  user   User @relation(fields: [userId], references: [id])
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}